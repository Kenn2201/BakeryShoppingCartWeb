<%- include('partials/header'); -%>

<style>
.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 20px;
}

.product-table {
  width: 100%;
  border-collapse: collapse;
  margin-bottom: 20px;
}

.product-table th,
.product-table td {
  padding: 10px;
  text-align: left;
  border-bottom: 1px solid #ccc;
}

.product-image {
  width: 50px;
  height: 50px;
  object-fit: contain;
}

.product-info {
  margin-bottom: 20px;
}

.total-section {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  margin-bottom: 20px;
}

.total-section p {
  margin: 0;
}

.pay-now-btn,
.delete-product-btn {
  background-color: #28a745;
  color: #fff;
  border: none;
  padding: 5px 10px;
  border-radius: 3px;
  cursor: pointer;
  margin-top: 10px;
}

.buy-products-btn {
  background-color: #ffc107;
  color: #000;
  border: 1px solid #000;
  padding: 5px 10px;
  border-radius: 3px;
  cursor: pointer;
  margin-top: 10px;
}

.left-section {
  flex-grow: 1;
}

.right-section {
  margin-left: 20px;
}
</style>

<% if (!product || product.length === 0) { %>
  <div class="shopping-cart">
    <a href="/productpage" class="buy-products-btn">Add Products to Shopping Cart</a>
    <div class="empty-cart">
      <p>Your shopping cart is empty.</p>
    </div>
  </div>
<% } else { %>
  <div class="container">
    <table class="product-table">
      <thead>
        <tr>
          <th></th>
          <th>Image</th>
          <th>Product Name</th>
          <th>Units</th>
          <th>Price</th>
          <th>Quantity</th>
          <th>Subtotal</th>
          <th>Delete Product</th>
        </tr>
      </thead>
      <tbody>
        <% for (let i = 0; i < product.length; i++) { %>
          <tr>
            <td><input type="checkbox" name="selectedProducts" value="<%= product[i]._id %>" class="product-checkbox"></td>
            <td><img src="data:<%= product[i].image.contentType %>;base64,<%= product[i].image.data.toString('base64') %>" alt="Product Image" class="product-image"></td>
            <td><%= product[i].product_name %></td>
            <td><%= product[i].units %></td>
            <td><%= product[i].price %></td>
            <td><%= product[i].product_quantity %></td>
            <td><%= product[i].subtotal_per_unit_and_quantity %></td>
            <td><button type="button" class="delete-product-btn" data-product-id="<%= product[i]._id %>">Delete Selected</button></td>
          </tr>
        <% } %>
      </tbody>
    </table>

    <div class="product-info">
      <p>Customer ID: <%= product[0].customer_id %></p>
      <!-- Add more product details as needed -->
    </div>

    <div class="total-section">
      <div class="left-section">
        <div class="total-container">
          <p>Total of items checked to be ordered: <span id="totalItemsChecked">0</span></p>
          <p>Overall Price: <span id="overallPrice">0</span></p>
        </div>
      </div>
      <div class="right-section">
        <button class="pay-now-btn">Pay Now</button>
        <button type="submit" class="buy-products-btn">Buy Products</button>
      </div>
    </div>
  </div>
<% } %>

<script>
document.addEventListener("DOMContentLoaded", function() {
  // Get the checkboxes
  var checkboxes = document.querySelectorAll(".product-checkbox");

  // Attach event listener to each checkbox
  checkboxes.forEach(function(checkbox) {
    checkbox.addEventListener("change", function() {
      var totalItemsChecked = 0;
      var overallPrice = 0;

      // Loop through the checkboxes to calculate the total items checked and overall price
      checkboxes.forEach(function(checkbox) {
        if (checkbox.checked) {
          var row = checkbox.parentNode.parentNode;
          var quantity = parseInt(row.querySelector("td:nth-child(6)").innerText);
          var subtotal = parseFloat(row.querySelector("td:nth-child(7)").innerText);

          totalItemsChecked += quantity;
          overallPrice += subtotal;
        }
      });

      // Update the values in the UI
      document.getElementById("totalItemsChecked").innerText = totalItemsChecked;
      document.getElementById("overallPrice").innerText = overallPrice.toFixed(2);
    });
  });

  // Delete button click event
  var deleteButtons = document.querySelectorAll(".delete-product-btn");
  deleteButtons.forEach(function(button) {
    button.addEventListener("click", function() {
      var productId = button.dataset.productId;
      deleteProduct(productId);
    });
  });

  // Function to delete a product
  function deleteProduct(productId) {
    fetch("/delete-product-shoppintcart/:productId", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({ productId: productId })
    })
    .then(function(response) {
      if (response.ok) {
        // Product deleted successfully, you can perform any necessary UI updates
        console.log("Product deleted");
      } else {
        // Error occurred while deleting the product
        console.error("Error deleting product");
      }
    })
    .catch(function(error) {
      console.error("Error deleting product", error);
    });
  }
});
</script>

<%- include('partials/footer'); -%>
